bf70a621ce5d9630c18fbecd90ae26d4
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "style", "visible", "size"],
    _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Badge;

var _native = require("@react-navigation/native");

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function Badge(_ref) {
  var children = _ref.children,
      style = _ref.style,
      _ref$visible = _ref.visible,
      visible = _ref$visible === void 0 ? true : _ref$visible,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 18 : _ref$size,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _React$useState = React.useState(function () {
    return new _reactNative.Animated.Value(visible ? 1 : 0);
  }),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),
      opacity = _React$useState2[0];

  var _React$useState3 = React.useState(visible),
      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
      rendered = _React$useState4[0],
      setRendered = _React$useState4[1];

  var theme = (0, _native.useTheme)();
  React.useEffect(function () {
    if (!rendered) {
      return;
    }

    _reactNative.Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150,
      useNativeDriver: true
    }).start(function (_ref2) {
      var finished = _ref2.finished;

      if (finished && !visible) {
        setRendered(false);
      }
    });

    return function () {
      return opacity.stopAnimation();
    };
  }, [opacity, rendered, visible]);

  if (!rendered) {
    if (visible) {
      setRendered(true);
    } else {
      return null;
    }
  }

  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},
      _ref3$backgroundColor = _ref3.backgroundColor,
      backgroundColor = _ref3$backgroundColor === void 0 ? theme.colors.notification : _ref3$backgroundColor,
      restStyle = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);

  var textColor = (0, _color.default)(backgroundColor).isLight() ? 'black' : 'white';
  var borderRadius = size / 2;
  var fontSize = Math.floor(size * 3 / 4);
  return React.createElement(_reactNative.Animated.Text, _extends({
    numberOfLines: 1,
    style: [{
      transform: [{
        scale: opacity.interpolate({
          inputRange: [0, 1],
          outputRange: [0.5, 1]
        })
      }],
      color: textColor,
      lineHeight: size - 1,
      height: size,
      minWidth: size,
      opacity: opacity,
      backgroundColor: backgroundColor,
      fontSize: fontSize,
      borderRadius: borderRadius
    }, styles.container, restStyle]
  }, rest), children);
}

var styles = _reactNative.StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    paddingHorizontal: 4,
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUFBUSxFQUFFekMsSUFaWjtNQWFFTSxPQWJGLEVBYUVBLE9BYkY7TUFjRWMsZUFkRixFQWNFQSxlQWRGO01BZUVPLFFBZkYsRUFlRUEsUUFmRjtNQWdCRUQ7SUFoQkYsQ0FESyxFQW1CTGdCLE1BQU0sQ0FBQ0MsU0FuQkYsRUFvQkxwQixTQXBCSztFQUZULEdBd0JNdEIsSUF4Qk4sR0EwQkdKLFFBMUJILENBREY7QUE4QkQ7O0FBRUQsSUFBTTZDLE1BQU0sR0FBR3hCLHdCQUFXMEIsTUFBWDFCLENBQWtCO0VBQy9CeUIsU0FBUyxFQUFFO0lBQ1RFLFNBQVMsRUFBRSxVQURGO0lBRVRDLFNBQVMsRUFBRSxRQUZGO0lBR1RDLGlCQUFpQixFQUFFLENBSFY7SUFJVEMsUUFBUSxFQUFFO0VBSkQ7QUFEb0IsQ0FBbEI5QixDQUFmIiwibmFtZXMiOlsiQmFkZ2UiLCJjaGlsZHJlbiIsInN0eWxlIiwidmlzaWJsZSIsInNpemUiLCJyZXN0IiwiUmVhY3QiLCJ1c2VTdGF0ZSIsIkFuaW1hdGVkIiwiVmFsdWUiLCJvcGFjaXR5IiwicmVuZGVyZWQiLCJzZXRSZW5kZXJlZCIsInRoZW1lIiwidXNlRWZmZWN0IiwidGltaW5nIiwidG9WYWx1ZSIsImR1cmF0aW9uIiwidXNlTmF0aXZlRHJpdmVyIiwic3RhcnQiLCJmaW5pc2hlZCIsInN0b3BBbmltYXRpb24iLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImJhY2tncm91bmRDb2xvciIsImNvbG9ycyIsIm5vdGlmaWNhdGlvbiIsInJlc3RTdHlsZSIsInRleHRDb2xvciIsImlzTGlnaHQiLCJib3JkZXJSYWRpdXMiLCJmb250U2l6ZSIsIk1hdGgiLCJmbG9vciIsIl9yZWFjdE5hdGl2ZSIsIlRleHQiLCJudW1iZXJPZkxpbmVzIiwidHJhbnNmb3JtIiwic2NhbGUiLCJpbnRlcnBvbGF0ZSIsImlucHV0UmFuZ2UiLCJvdXRwdXRSYW5nZSIsImNvbG9yIiwibGluZUhlaWdodCIsImhlaWdodCIsIm1pbldpZHRoIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY3JlYXRlIiwiYWxpZ25TZWxmIiwidGV4dEFsaWduIiwicGFkZGluZ0hvcml6b250YWwiLCJvdmVyZmxvdyJdLCJzb3VyY2VzIjpbIkJhZGdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5pbXBvcnQgY29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQW5pbWF0ZWQsIFN0eWxlUHJvcCwgU3R5bGVTaGVldCwgVGV4dFN0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxudHlwZSBQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGJhZGdlIGlzIHZpc2libGVcbiAgICovXG4gIHZpc2libGU6IGJvb2xlYW47XG4gIC8qKlxuICAgKiBDb250ZW50IG9mIHRoZSBgQmFkZ2VgLlxuICAgKi9cbiAgY2hpbGRyZW4/OiBzdHJpbmcgfCBudW1iZXI7XG4gIC8qKlxuICAgKiBTaXplIG9mIHRoZSBgQmFkZ2VgLlxuICAgKi9cbiAgc2l6ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFN0eWxlIG9iamVjdCBmb3IgdGhlIHRhYiBiYXIgY29udGFpbmVyLlxuICAgKi9cbiAgc3R5bGU/OiBBbmltYXRlZC5XaXRoQW5pbWF0ZWRWYWx1ZTxTdHlsZVByb3A8VGV4dFN0eWxlPj47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYWRnZSh7XG4gIGNoaWxkcmVuLFxuICBzdHlsZSxcbiAgdmlzaWJsZSA9IHRydWUsXG4gIHNpemUgPSAxOCxcbiAgLi4ucmVzdFxufTogUHJvcHMpIHtcbiAgY29uc3QgW29wYWNpdHldID0gUmVhY3QudXNlU3RhdGUoKCkgPT4gbmV3IEFuaW1hdGVkLlZhbHVlKHZpc2libGUgPyAxIDogMCkpO1xuICBjb25zdCBbcmVuZGVyZWQsIHNldFJlbmRlcmVkXSA9IFJlYWN0LnVzZVN0YXRlKHZpc2libGUpO1xuXG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcmVuZGVyZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBBbmltYXRlZC50aW1pbmcob3BhY2l0eSwge1xuICAgICAgdG9WYWx1ZTogdmlzaWJsZSA/IDEgOiAwLFxuICAgICAgZHVyYXRpb246IDE1MCxcbiAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcbiAgICB9KS5zdGFydCgoeyBmaW5pc2hlZCB9KSA9PiB7XG4gICAgICBpZiAoZmluaXNoZWQgJiYgIXZpc2libGUpIHtcbiAgICAgICAgc2V0UmVuZGVyZWQoZmFsc2UpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuICgpID0+IG9wYWNpdHkuc3RvcEFuaW1hdGlvbigpO1xuICB9LCBbb3BhY2l0eSwgcmVuZGVyZWQsIHZpc2libGVdKTtcblxuICBpZiAoIXJlbmRlcmVkKSB7XG4gICAgaWYgKHZpc2libGUpIHtcbiAgICAgIHNldFJlbmRlcmVkKHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvLyBAdHMtZXhwZWN0LWVycm9yOiBiYWNrZ3JvdW5kQ29sb3IgZGVmaW5pdGVseSBleGlzdHNcbiAgY29uc3QgeyBiYWNrZ3JvdW5kQ29sb3IgPSB0aGVtZS5jb2xvcnMubm90aWZpY2F0aW9uLCAuLi5yZXN0U3R5bGUgfSA9XG4gICAgU3R5bGVTaGVldC5mbGF0dGVuKHN0eWxlKSB8fCB7fTtcbiAgY29uc3QgdGV4dENvbG9yID0gY29sb3IoYmFja2dyb3VuZENvbG9yKS5pc0xpZ2h0KCkgPyAnYmxhY2snIDogJ3doaXRlJztcblxuICBjb25zdCBib3JkZXJSYWRpdXMgPSBzaXplIC8gMjtcbiAgY29uc3QgZm9udFNpemUgPSBNYXRoLmZsb29yKChzaXplICogMykgLyA0KTtcblxuICByZXR1cm4gKFxuICAgIDxBbmltYXRlZC5UZXh0XG4gICAgICBudW1iZXJPZkxpbmVzPXsxfVxuICAgICAgc3R5bGU9e1tcbiAgICAgICAge1xuICAgICAgICAgIHRyYW5zZm9ybTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzY2FsZTogb3BhY2l0eS5pbnRlcnBvbGF0ZSh7XG4gICAgICAgICAgICAgICAgaW5wdXRSYW5nZTogWzAsIDFdLFxuICAgICAgICAgICAgICAgIG91dHB1dFJhbmdlOiBbMC41LCAxXSxcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgICAgY29sb3I6IHRleHRDb2xvcixcbiAgICAgICAgICBsaW5lSGVpZ2h0OiBzaXplIC0gMSxcbiAgICAgICAgICBoZWlnaHQ6IHNpemUsXG4gICAgICAgICAgbWluV2lkdGg6IHNpemUsXG4gICAgICAgICAgb3BhY2l0eSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgZm9udFNpemUsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzLFxuICAgICAgICB9LFxuICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgICByZXN0U3R5bGUsXG4gICAgICBdfVxuICAgICAgey4uLnJlc3R9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQW5pbWF0ZWQuVGV4dD5cbiAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBhbGlnblNlbGY6ICdmbGV4LWVuZCcsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogNCxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG59KTtcbiJdfQ==