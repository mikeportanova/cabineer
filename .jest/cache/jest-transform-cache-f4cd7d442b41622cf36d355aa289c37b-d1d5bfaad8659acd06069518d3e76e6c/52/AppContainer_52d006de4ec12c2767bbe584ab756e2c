33e877e566531e528d8b7e9876859d15
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _View = _interopRequireDefault(require("../Components/View/View"));

var _RCTDeviceEventEmitter = _interopRequireDefault(require("../EventEmitter/RCTDeviceEventEmitter"));

var _StyleSheet = _interopRequireDefault(require("../StyleSheet/StyleSheet"));

var _RootTag = require("./RootTag");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var AppContainer = function (_React$Component) {
  (0, _inherits2.default)(AppContainer, _React$Component);

  var _super = _createSuper(AppContainer);

  function AppContainer() {
    var _this;

    (0, _classCallCheck2.default)(this, AppContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      inspector: null,
      mainKey: 1,
      hasError: false
    };
    _this._subscription = null;
    return _this;
  }

  (0, _createClass2.default)(AppContainer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          this._subscription = _RCTDeviceEventEmitter.default.addListener('toggleElementInspector', function () {
            var Inspector = require("../Inspector/Inspector");

            var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
              inspectedView: _this2._mainRef,
              onRequestRerenderApp: function onRequestRerenderApp(updateInspectedView) {
                _this2.setState(function (s) {
                  return {
                    mainKey: s.mainKey + 1
                  };
                }, function () {
                  return updateInspectedView(_this2._mainRef);
                });
              }
            });

            _this2.setState({
              inspector: inspector
            });
          });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._subscription != null) {
        this._subscription.remove();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var logBox = null;

      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling && !this.props.internal_excludeLogBox) {
          var LogBoxNotificationContainer = require("../LogBox/LogBoxNotificationContainer").default;

          logBox = React.createElement(LogBoxNotificationContainer, null);
        }
      }

      var innerView = React.createElement(_View.default, {
        collapsable: !this.state.inspector,
        key: this.state.mainKey,
        pointerEvents: "box-none",
        style: styles.appContainer,
        ref: function ref(_ref) {
          _this3._mainRef = _ref;
        }
      }, this.props.children);
      var Wrapper = this.props.WrapperComponent;

      if (Wrapper != null) {
        innerView = React.createElement(Wrapper, {
          initialProps: this.props.initialProps,
          fabric: this.props.fabric === true,
          showArchitectureIndicator: this.props.showArchitectureIndicator === true
        }, innerView);
      }

      return React.createElement(_RootTag.RootTagContext.Provider, {
        value: (0, _RootTag.createRootTag)(this.props.rootTag)
      }, React.createElement(_View.default, {
        style: styles.appContainer,
        pointerEvents: "box-none"
      }, !this.state.hasError && innerView, this.state.inspector, logBox));
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.getDerivedStateFromError = undefined;

var styles = _StyleSheet.default.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,