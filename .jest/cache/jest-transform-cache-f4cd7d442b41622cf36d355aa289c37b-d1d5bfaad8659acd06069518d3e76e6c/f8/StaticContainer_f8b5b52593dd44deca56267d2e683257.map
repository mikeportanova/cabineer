{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,eAAT,CAAyBC,KAAzB,EAAqC;EACnC,OAAOA,KAAK,CAACC,QAAb;AACD;;eAEcC,KAAK,CAACC,IAAND,CAAWH,eAAXG,EAA4B,UAACE,SAAD,EAAiBC,SAAjB,EAAoC;EAC7E,IAAMC,YAAY,GAAGC,MAAM,CAACC,IAAPD,CAAYH,SAAZG,CAArB;EACA,IAAME,YAAY,GAAGF,MAAM,CAACC,IAAPD,CAAYF,SAAZE,CAArB;;EAEA,IAAID,YAAY,CAACI,MAAbJ,KAAwBG,YAAY,CAACC,MAAzC,EAAiD;IAC/C,OAAO,KAAP;EACD;;EAED,KAAK,IAAMC,GAAX,IAAkBL,YAAlB,EAAgC;IAC9B,IAAIK,GAAG,KAAK,UAAZ,EAAwB;MACtB;IACD;;IAED,IAAIP,SAAS,CAACO,GAAD,CAATP,KAAmBC,SAAS,CAACM,GAAD,CAAhC,EAAuC;MACrC,OAAO,KAAP;IACD;EACF;;EAED,OAAO,IAAP;AAlBa","names":["StaticContainer","props","children","React","memo","prevProps","nextProps","prevPropKeys","Object","keys","nextPropKeys","length","key"],"sources":["StaticContainer.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Component which prevents updates for children if no props changed\n */\nfunction StaticContainer(props: any) {\n  return props.children;\n}\n\nexport default React.memo(StaticContainer, (prevProps: any, nextProps: any) => {\n  const prevPropKeys = Object.keys(prevProps);\n  const nextPropKeys = Object.keys(nextProps);\n\n  if (prevPropKeys.length !== nextPropKeys.length) {\n    return false;\n  }\n\n  for (const key of prevPropKeys) {\n    if (key === 'children') {\n      continue;\n    }\n\n    if (prevProps[key] !== nextProps[key]) {\n      return false;\n    }\n  }\n\n  return true;\n});\n"]}