5ac3e3502fe0a5b951fbd1e0ed83c0ff
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RootTagContext = void 0;
exports.createRootTag = createRootTag;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var RootTagContext = React.createContext(0);
exports.RootTagContext = RootTagContext;

if (__DEV__) {
  RootTagContext.displayName = 'RootTagContext';
}

function createRootTag(rootTag) {
  return rootTag;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSb290VGFnQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsIl9fREVWX18iLCJkaXNwbGF5TmFtZSIsImNyZWF0ZVJvb3RUYWciLCJyb290VGFnIl0sInNvdXJjZXMiOlsiUm9vdFRhZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4vLyBUT0RPOiBNYWtlIHRoaXMgaW50byBhbiBvcGFxdWUgdHlwZS5cbmV4cG9ydCBvcGFxdWUgdHlwZSBSb290VGFnID0gbnVtYmVyO1xuXG5leHBvcnQgY29uc3QgUm9vdFRhZ0NvbnRleHQ6IFJlYWN0JENvbnRleHQ8Um9vdFRhZz4gPVxuICBSZWFjdC5jcmVhdGVDb250ZXh0PFJvb3RUYWc+KDApO1xuXG5pZiAoX19ERVZfXykge1xuICBSb290VGFnQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdSb290VGFnQ29udGV4dCc7XG59XG5cbi8qKlxuICogSW50ZW5kZWQgdG8gb25seSBiZSB1c2VkIGJ5IGBBcHBDb250YWluZXJgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUm9vdFRhZyhyb290VGFnOiBudW1iZXIgfCBSb290VGFnKTogUm9vdFRhZyB7XG4gIHJldHVybiByb290VGFnO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFVQTs7Ozs7O0FBS08sSUFBTUEsY0FBc0MsR0FDakRDLEtBQUssQ0FBQ0MsYUFBTixDQUE2QixDQUE3QixDQURLOzs7QUFHUCxJQUFJQyxPQUFKLEVBQWE7RUFDWEgsY0FBYyxDQUFDSSxXQUFmLEdBQTZCLGdCQUE3QjtBQUNEOztBQUtNLFNBQVNDLGFBQVQsQ0FBdUJDLE9BQXZCLEVBQTJEO0VBQ2hFLE9BQU9BLE9BQVA7QUFDRCJ9