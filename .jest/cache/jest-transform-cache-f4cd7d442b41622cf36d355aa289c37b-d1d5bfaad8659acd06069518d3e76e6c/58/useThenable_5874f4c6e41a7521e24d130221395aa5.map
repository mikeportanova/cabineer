{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,WAAT,CAAwBC,MAAxB,EAAsD;EACnE,sBAAkBC,KAAK,CAACC,QAAND,CAAeD,MAAfC,CAAlB;EAAA;EAAA,IAAOE,OAAP;;EAEA,IAAIC,YAAsC,GAAG,CAAC,KAAD,EAAQC,SAAR,CAA7C;EAGAF,OAAO,CAACG,IAARH,CAAcI,gBAAD,EAAY;IACvBH,YAAY,GAAG,CAAC,IAAD,EAAOG,MAAP,CAAfH;EADF;;EAIA,uBAA0BH,KAAK,CAACC,QAAND,CAAeG,YAAfH,CAA1B;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;;EACA,0CAAmBD,KAAnB;EAAA,IAAOE,QAAP;;EAEAT,KAAK,CAACU,SAANV,CAAgB,YAAM;IACpB,IAAIW,SAAS,GAAG,KAAhB;;IAEA,IAAMC,OAAO;MAAA,2CAAG,aAAY;QAC1B,IAAIN,MAAJ;;QAEA,IAAI;UACFA,MAAM,SAASJ,OAAfI;QADF,UAEU;UACR,IAAI,CAACK,SAAL,EAAgB;YACdH,QAAQ,CAAC,CAAC,IAAD,EAAOF,MAAP,CAAD,CAARE;UACD;QACF;MATH,CAAa;;MAAA,gBAAPI,OAAO;QAAA;MAAA;IAAA,GAAb;;IAYA,IAAI,CAACH,QAAL,EAAe;MACbG,OAAO;IACR;;IAED,OAAO,YAAM;MACXD,SAAS,GAAG,IAAZA;IADF;EAnBF,GAsBG,CAACT,OAAD,EAAUO,QAAV,CAtBHT;EAwBA,OAAOO,KAAP;AACD","names":["useThenable","create","React","useState","promise","initialState","undefined","then","result","state","setState","resolved","useEffect","cancelled","resolve"],"sources":["useThenable.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n"]}