{"version":3,"mappings":"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","names":["isAndroid","Platform","OS","MaybeNestedStack","options","route","presentation","headerHeight","children","colors","header","headerShown","contentStyle","isHeaderInModal","undefined","headerShownPreviousRef","React","useRef","useEffect","current","name","content","_DebugContainer","style","styles","container","backgroundColor","background","stackPresentation","_reactNativeScreens","enabled","StyleSheet","absoluteFill","_HeaderConfig","canGoBack","SceneView","descriptor","previousDescriptor","nextDescriptor","index","onWillDisappear","onAppear","onDisappear","onDismissed","navigation","render","animationDuration","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","isHeaderInPush","insets","frame","isModal","isIPhone","isPad","isTVOS","isLandscape","width","height","topInset","top","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","defaultHeaderHeight","useState","customHeaderHeight","setCustomHeaderHeight","key","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","_native","Provider","value","_elements","_reactNative","onLayout","e","nativeEvent","layout","back","title","NativeStackViewInner","state","descriptors","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","_state$routes$find","message","console","error","map","previousKey","_state$routes","nextKey","_state$routes2","emit","type","data","closing","target","event","dispatch","StackActions","pop","dismissCount","source","NativeStackView","props","create","flex"],"sources":["NativeStackView.native.tsx"],"sourcesContent":["import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  index,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerShown,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const isHeaderInPush = isAndroid\n    ? headerShown\n    : presentation === 'card' && headerShown !== false;\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone =\n    Platform.OS === 'ios' && !(Platform.isPad || Platform.isTVOS);\n  const isLandscape = frame.width > frame.height;\n\n  const topInset = isModal || (isIPhone && isLandscape) ? 0 : insets.top;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || isHeaderInPush !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                isHeaderInPush !== false\n                  ? headerHeight\n                  : parentHeaderHeight ?? 0\n              }\n            >\n              {header !== undefined && headerShown !== false ? (\n                <View\n                  onLayout={(e) => {\n                    setCustomHeaderHeight(e.nativeEvent.layout.height);\n                  }}\n                >\n                  {header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })}\n                </View>\n              ) : (\n                <HeaderConfig\n                  {...options}\n                  route={route}\n                  headerShown={isHeaderInPush}\n                  headerHeight={headerHeight}\n                  canGoBack={index !== 0}\n                />\n              )}\n              <MaybeNestedStack\n                options={options}\n                route={route}\n                presentation={presentation}\n                headerHeight={headerHeight}\n              >\n                {render()}\n              </MaybeNestedStack>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using 'gestureEnabled: false' to prevent back gesture and use a custom back button with 'headerLeft' option to override the native behavior.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}