{"version":3,"mappings":"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","names":["HeaderConfig","headerHeight","headerBackImageSource","headerBackButtonMenuEnabled","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","route","title","canGoBack","insets","colors","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","fontFamily","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","name","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","children","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","React","_reactNative","style","styles","background","height","_reactNativeScreens","backgroundColor","card","backTitle","backTitleFontSize","blurEffect","direction","I18nManager","isRTL","disableBackButtonMenu","hidden","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","top","row","_elements","undefined","source","create","flexDirection","alignItems","position","left","right","zIndex","overflow"],"sources":["HeaderConfig.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerHeight,\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const insets = useSafeAreaInsets();\n\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <>\n      {headerBackground != null ? (\n        <View\n          style={[\n            styles.background,\n            headerTransparent ? styles.translucent : null,\n            { height: headerHeight },\n          ]}\n        >\n          {headerBackground()}\n        </View>\n      ) : null}\n      <ScreenStackHeaderConfig\n        backButtonInCustomView={backButtonInCustomView}\n        backgroundColor={\n          headerStyleFlattened.backgroundColor ??\n          (headerBackground != null || headerTransparent\n            ? 'transparent'\n            : colors.card)\n        }\n        backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n        backTitleFontFamily={backTitleFontFamily}\n        backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n        blurEffect={headerBlurEffect}\n        color={tintColor}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n        hidden={headerShown === false}\n        hideBackButton={headerBackVisible === false}\n        hideShadow={\n          headerShadowVisible === false ||\n          headerBackground != null ||\n          headerTransparent\n        }\n        largeTitle={headerLargeTitle}\n        largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n        largeTitleColor={headerLargeTitleStyleFlattened.color}\n        largeTitleFontFamily={largeTitleFontFamily}\n        largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n        largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n        largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n        title={titleText}\n        titleColor={titleColor}\n        titleFontFamily={titleFontFamily}\n        titleFontSize={titleFontSize}\n        titleFontWeight={titleFontWeight}\n        topInsetEnabled={insets.top !== 0}\n        translucent={\n          // This defaults to `true`, so we can't pass `undefined`\n          translucent === true\n        }\n      >\n        {Platform.OS === 'ios' ? (\n          <>\n            {headerLeftElement != null ? (\n              <ScreenStackHeaderLeftView>\n                {headerLeftElement}\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleElement != null ? (\n              <ScreenStackHeaderCenterView>\n                {headerTitleElement}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        ) : (\n          <>\n            {headerLeftElement != null || typeof headerTitle === 'function' ? (\n              <ScreenStackHeaderLeftView>\n                <View style={styles.row}>\n                  {headerLeftElement}\n                  {headerTitleAlign !== 'center' ? (\n                    typeof headerTitle === 'function' ? (\n                      headerTitleElement\n                    ) : (\n                      <HeaderTitle\n                        tintColor={tintColor}\n                        style={headerTitleStyleSupported}\n                      >\n                        {titleText}\n                      </HeaderTitle>\n                    )\n                  ) : null}\n                </View>\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleAlign === 'center' ? (\n              <ScreenStackHeaderCenterView>\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle\n                    tintColor={tintColor}\n                    style={headerTitleStyleSupported}\n                  >\n                    {titleText}\n                  </HeaderTitle>\n                )}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        )}\n        {headerBackImageSource !== undefined ? (\n          <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n        ) : null}\n        {headerRightElement != null ? (\n          <ScreenStackHeaderRightView>\n            {headerRightElement}\n          </ScreenStackHeaderRightView>\n        ) : null}\n        {hasHeaderSearchBar ? (\n          <ScreenStackHeaderSearchBarView>\n            <SearchBar {...headerSearchBarOptions} />\n          </ScreenStackHeaderSearchBarView>\n        ) : null}\n      </ScreenStackHeaderConfig>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n"]}