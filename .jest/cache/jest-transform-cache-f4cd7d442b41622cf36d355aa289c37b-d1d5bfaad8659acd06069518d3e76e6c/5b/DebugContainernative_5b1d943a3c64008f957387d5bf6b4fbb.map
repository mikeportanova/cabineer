{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAIA,SAAS,GAAGC,iBAAhB;;AAEA,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;EACzC,IAAMG,cAAc,GAAIC,SAAlBD,cAAkBC,MAAD,EAA2B;IAChD,IAAQC,iBAAR,GAAuCD,KAAvC,CAAQC,iBAAR;IAAA,IAA8BC,IAA9B,0CAAuCF,KAAvC;;IAEA,IAAIG,sBAASC,EAATD,KAAgB,KAAhBA,IAAyBF,iBAAiB,KAAK,MAAnD,EAA2D;MAEzD,OACEI,oBAACC,qBAAD,QACED,oBAACE,iBAAD,EAAUL,IAAV,CADF,CADF;IAKD;;IAED,OAAOG,oBAACE,iBAAD,EAAUL,IAAV,CAAP;EAZF;;EAeAR,SAAS,GAAGK,cAAZL;AACD;;eAEcA","names":["Container","View","process","env","NODE_ENV","DebugContainer","props","stackPresentation","rest","Platform","OS","React","_AppContainer","_reactNative"],"sources":["DebugContainer.native.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\nlet Container = View as unknown as React.ComponentType<ContainerProps>;\n\nif (process.env.NODE_ENV !== 'production') {\n  const DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} />;\n  };\n\n  Container = DebugContainer;\n}\n\nexport default Container;\n"]}