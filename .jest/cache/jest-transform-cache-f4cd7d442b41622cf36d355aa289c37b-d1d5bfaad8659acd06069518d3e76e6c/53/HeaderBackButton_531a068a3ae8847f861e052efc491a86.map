{"version":3,"mappings":"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","names":["HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","onLabelLayout","onPress","pressColor","pressOpacity","screenLayout","customTintColor","tintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","style","colors","React","useState","undefined","initialLabelWidth","setInitialLabelWidth","Platform","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","_reactNative","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","Text","accessible","onLayout","color","numberOfLines","OS","_MaskedView","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","_PlatformPressable","accessibilityRole","android_ripple","borderless","container","hitSlop","top","right","bottom","left","Fragment","StyleSheet","create","alignItems","flexDirection","hairlineWidth","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["HeaderBackButton.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]}