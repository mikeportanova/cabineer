{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAIA,OAAJ;;AAEA,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjBD;AADF,EAEE,OAAOE,CAAP,EAAU,CAEX;;AAEM,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAO9B;EAAA;;EAAA,IANJC,OAMI,QANJA,OAMI;EAAA,IALDC,IAKC;;EACJ,gBAAIL,OAAJ,8DAAIM,SAASC,cAAb,kDAAIC,oCAAJ,EAAiC;IAC/B,OAAOC,oBAACT,OAAD,CAASU,eAAT;MAAyBN,OAAO,EAAEA;IAAlC,GAA+CC,IAA/C,EAAP;EACD;;EAED,OAAOI,oBAACE,iBAAD,EAAUN,IAAV,CAAP;AAZK;;;;AAeA,SAASO,WAAT,QAA4D;EAAA;;EAAA,IAArCC,OAAqC,SAArCA,OAAqC;EAAA,IAA5BC,QAA4B,SAA5BA,QAA4B;EAAA,IAAfT,IAAe;;EACjE,iBAAIL,OAAJ,+DAAIe,UAASR,cAAb,kDAAIS,qCAAJ,EAAiC;IAC/B,OACEP,oBAACT,OAAD,CAASiB,MAAT;MAAgBC,aAAa,EAAEL,OAAO,GAAG,CAAH,GAAO;IAA7C,GAAoDR,IAApD,GACGS,QADH,CADF;EAKD;;EAED,OACEL,oBAACU,4BAAD;IAAoBN,OAAO,EAAEA;EAA7B,GAA0CR,IAA1C,GACGS,QADH,CADF;AAKD","names":["Screens","require","e","MaybeScreenContainer","enabled","rest","_Screens","screensEnabled","_Screens$screensEnabl","React","ScreenContainer","_reactNative","MaybeScreen","visible","children","_Screens2","_Screens2$screensEnab","Screen","activityState","_elements"],"sources":["ScreenFallback.tsx"],"sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { StyleProp, View, ViewProps, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\n        {children}\n      </Screens.Screen>\n    );\n  }\n\n  return (\n    <ResourceSavingView visible={visible} {...rest}>\n      {children}\n    </ResourceSavingView>\n  );\n}\n"]}