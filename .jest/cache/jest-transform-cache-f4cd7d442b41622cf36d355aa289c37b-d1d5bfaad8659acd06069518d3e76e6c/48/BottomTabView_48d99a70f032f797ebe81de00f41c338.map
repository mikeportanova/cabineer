{"version":3,"mappings":"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","names":["BottomTabView","props","tabBar","React","_BottomTabBar","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","Platform","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","useState","loaded","setLoaded","includes","dimensions","SafeAreaProviderCompat","initialMetrics","frame","layout","width","height","insets","style","options","tabBarStyle","tabBarHeight","setTabBarHeight","renderTabBar","_reactNativeSafeAreaContext","Consumer","top","right","bottom","left","_elements","_ScreenFallback","enabled","hasTwoStates","styles","container","map","route","descriptor","lazy","unmountOnBlur","isFocused","header","title","name","StyleSheet","absoluteFill","zIndex","visible","_BottomTabBarHeightContext","Provider","value","focused","headerShown","headerTransparent","headerStatusBarHeight","render","_BottomTabBarHeightCallbackContext","create","flex","overflow"],"sources":["BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationProp,\n} from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nexport default function BottomTabView(props: Props) {\n  const {\n    tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n    sceneContainerStyle,\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  return (\n    <SafeAreaProviderCompat>\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.container}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n            >\n              <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={descriptor.options.headerShown}\n                  headerTransparent={descriptor.options.headerTransparent}\n                  headerStatusBarHeight={\n                    descriptor.options.headerStatusBarHeight\n                  }\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={sceneContainerStyle}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n        {renderTabBar()}\n      </BottomTabBarHeightCallbackContext.Provider>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]}