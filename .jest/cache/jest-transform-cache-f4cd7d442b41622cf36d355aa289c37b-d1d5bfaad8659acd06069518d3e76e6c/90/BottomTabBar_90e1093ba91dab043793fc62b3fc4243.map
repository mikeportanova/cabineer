{"version":3,"mappings":"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","names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","_StyleSheet$flatten","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","useState","isTabBarHidden","setIsTabBarHidden","Animated","Value","visible","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","_visibilityAnimationC2","config","start","finished","hide","_visibilityAnimationC4","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","_react","_reactNative","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","_native","Provider","value","_BottomTabItem","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","color","size","_elements","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}