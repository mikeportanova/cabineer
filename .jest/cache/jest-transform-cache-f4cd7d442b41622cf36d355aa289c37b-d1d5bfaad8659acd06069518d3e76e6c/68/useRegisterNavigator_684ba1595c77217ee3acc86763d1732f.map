{"version":3,"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAASA,oBAAT,GAAgC;EAC7C,sBAAcC,KAAK,CAACC,QAAND,CAAe;IAAA,OAAM,wBAAN;EAAA,CAAfA,CAAd;EAAA;EAAA,IAAOE,GAAP;;EACA,IAAMC,SAAS,GAAGH,KAAK,CAACI,UAANJ,CAAiBK,6CAAjBL,CAAlB;;EAEA,IAAIG,SAAS,KAAKG,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,wLADI,CAAN;EAGD;;EAEDP,KAAK,CAACQ,SAANR,CAAgB,YAAM;IACpB,IAAQS,QAAR,GAAiCN,SAAjC,CAAQM,QAAR;IAAA,IAAkBC,UAAlB,GAAiCP,SAAjC,CAAkBO,UAAlB;IAEAD,QAAQ,CAACP,GAAD,CAARO;IAEA,OAAO;MAAA,OAAMC,UAAU,CAACR,GAAD,CAAhB;IAAA,CAAP;EALF,GAMG,CAACC,SAAD,EAAYD,GAAZ,CANHF;EAQA,OAAOE,GAAP;AACD","names":["useRegisterNavigator","React","useState","key","container","useContext","SingleNavigatorContext","undefined","Error","useEffect","register","unregister"],"sources":["useRegisterNavigator.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]}