{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,YAAT,CAGbC,SAHa,EAGCC,KAHD,EAGW;EACxB,IAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAND,CAAuBF,KAAvBE,CAAjB;EAKAD,QAAQ,CAACG,OAATH,GAAmBD,KAAnBC;EAEAC,KAAK,CAACG,SAANH,CAAgB,YAAM;IACpBD,QAAQ,CAACG,OAATH,GAAmB,IAAnBA;EADF;EAIA,OAAOC,KAAK,CAACC,MAAND,CAAcI,cAAD,EAAkD;IACpE,IAAMN,KAAK,GAAGC,QAAQ,CAACG,OAAvB;;IAEA,IAAIJ,KAAK,KAAK,IAAd,EAAoB;MAClB,MAAM,IAAIO,KAAJ,CACJ,+EADI,CAAN;IAJkE;;IAUpE,OAAOL,oBAACH,SAAD,eAAeC,KAAf,EAA0BM,IAA1B,EAAP;EAVK,GAWJF,OAXH;AAYD","names":["useComponent","Component","props","propsRef","React","useRef","current","useEffect","rest","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default function useComponent<\n  T extends React.ComponentType<any>,\n  P extends {}\n>(Component: T, props: P) {\n  const propsRef = React.useRef<P | null>(props);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    propsRef.current = null;\n  });\n\n  return React.useRef((rest: Omit<React.ComponentProps<T>, keyof P>) => {\n    const props = propsRef.current;\n\n    if (props === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    // @ts-expect-error: the props should be fine here\n    return <Component {...props} {...rest} />;\n  }).current;\n}\n"]}