{"version":3,"mappings":";;;;;;;AACA;;AACA;;AAQA;;;;;;;;AAmBe,SAASA,UAAT,OAWL;EAAA,IAVDC,CAUC,QAVRC,KAUQ;EAAA,IATRC,UASQ,QATRA,UASQ;EAAA,IARRC,KAQQ,QARRA,KAQQ;EAAA,IAPRC,UAOQ,QAPRA,UAOQ;EAAA,IANRC,aAMQ,QANRA,aAMQ;EAAA,IALRC,eAKQ,QALRA,eAKQ;EAAA,IAJRC,eAIQ,QAJRA,eAIQ;EAAA,IAHRC,iBAGQ,QAHRA,iBAGQ;EAAA,IAFRC,UAEQ,QAFRA,UAEQ;EAAA,IADRC,KACQ,QADRA,KACQ;EACR,IAAMC,IAAI,GAAG,EAAb;EAIA,OACEC,6BAACC,iBAAD;IACEH,KAAK,EAAE,CAACR,UAAU,GAAGY,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,YAA7C,EAA2DN,KAA3D;EADT,GAGEE,6BAACC,iBAAD;IAAMH,KAAK,EAAE,CAACI,MAAM,CAACG,IAAR,EAAc;MAAEC,OAAO,EAAEb;IAAX,CAAd;EAAb,GACGI,UAAU,CAAC;IACVU,OAAO,EAAE,IADC;IAEVR,IAFU,EAEVA,IAFU;IAGVS,KAAK,EAAEb;EAHG,CAAD,CADb,CAHF,EAUEK,6BAACC,iBAAD;IAAMH,KAAK,EAAE,CAACI,MAAM,CAACG,IAAR,EAAc;MAAEC,OAAO,EAAEZ;IAAX,CAAd;EAAb,GACGG,UAAU,CAAC;IACVU,OAAO,EAAE,KADC;IAEVR,IAFU,EAEVA,IAFU;IAGVS,KAAK,EAAEZ;EAHG,CAAD,CADb,CAVF,EAiBEI,6BAACS,cAAD;IACEC,OAAO,EAAEnB,KAAK,IAAI,IADpB;IAEEO,KAAK,EAAE,CACLI,MAAM,CAACX,KADF,EAELD,UAAU,GAAGY,MAAM,CAACS,eAAV,GAA4BT,MAAM,CAACU,aAFxC,EAGLpB,UAHK,CAFT;IAOEO,IAAI,EAAGA,IAAI,GAAG,CAAPA,GAAY;EAPrB,GASGR,KATH,CAjBF,CADF;AA+BD;;AAED,IAAMW,MAAM,GAAGW,wBAAWC,MAAXD,CAAkB;EAC/BR,IAAI,EAAE;IAIJU,QAAQ,EAAE,UAJN;IAKJC,SAAS,EAAE,QALP;IAMJC,UAAU,EAAE,QANR;IAOJC,cAAc,EAAE,QAPZ;IAQJC,MAAM,EAAE,MARJ;IASJC,KAAK,EAAE,MATH;IAWJC,QAAQ,EAAE;EAXN,CADyB;EAc/BjB,YAAY,EAAE;IACZkB,IAAI,EAAE;EADM,CAdiB;EAiB/BnB,cAAc,EAAE;IACdgB,MAAM,EAAE,MADM;IAEdI,SAAS,EAAE;EAFG,CAjBe;EAqB/BhC,KAAK,EAAE;IACLwB,QAAQ,EAAE,UADL;IAELS,IAAI,EAAE;EAFD,CArBwB;EAyB/BZ,aAAa,EAAE;IACba,GAAG,EAAE;EADQ,CAzBgB;EA4B/Bd,eAAe,EAAE;IACfc,GAAG,EAAE;EADU;AA5Bc,CAAlBZ,CAAf","names":["TabBarIcon","_","route","horizontal","badge","badgeStyle","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","style","size","_react","_reactNative","styles","iconHorizontal","iconVertical","icon","opacity","focused","color","_Badge","visible","badgeHorizontal","badgeVertical","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth","flex","marginTop","left","top"],"sources":["TabBarIcon.tsx"],"sourcesContent":["import type { Route } from '@react-navigation/native';\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  route: _,\n  horizontal,\n  badge,\n  badgeStyle,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]}