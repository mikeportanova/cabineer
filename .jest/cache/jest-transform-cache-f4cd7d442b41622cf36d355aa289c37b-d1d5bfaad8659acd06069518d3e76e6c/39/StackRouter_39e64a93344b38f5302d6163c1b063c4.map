{"version":3,"mappings":"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","names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","_ref","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","index","routes","getRehydratedState","partialState","_ref2","state","filter","route","map","length","getStateForRouteNamesChange","_ref3","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"sources":["StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]}