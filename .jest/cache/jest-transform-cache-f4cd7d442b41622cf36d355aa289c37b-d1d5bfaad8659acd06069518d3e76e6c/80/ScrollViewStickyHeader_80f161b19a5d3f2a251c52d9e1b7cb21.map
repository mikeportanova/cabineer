{"version":3,"names":["AnimatedView","AnimatedImplementation","createAnimatedComponent","View","ScrollViewStickyHeader","state","measured","layoutY","layoutHeight","nextHeaderLayoutY","props","translateY","_translateY","_shouldRecreateTranslateY","_haveReceivedInitialZeroTranslateY","_debounceTimeout","Platform","OS","setNextHeaderY","y","setState","_onLayout","event","nativeEvent","layout","height","onLayout","child","React","Children","only","children","onCellLayout","cellKey","index","_setComponentRef","ref","_ref","_animatedValueListenerId","removeListener","_timer","clearTimeout","nextProps","scrollViewHeight","scrollAnimatedValue","inverted","isFabric","offset","AnimatedAddition","_animatedValueListener","value","setTimeout","addListener","stateNode","canonical","inputRange","outputRange","stickStartPoint","push","collisionPoint","updateTranslateListener","interpolate","hiddenOnScroll","AnimatedDiffClamp","extrapolateLeft","passthroughAnimatedPropExplicitValues","style","transform","nativeID","styles","header","cloneElement","fill","undefined","Component","StyleSheet","create","zIndex","position","flex","module","exports"],"sources":["ScrollViewStickyHeader.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport AnimatedImplementation from '../../Animated/AnimatedImplementation';\nimport AnimatedAddition from '../../Animated/nodes/AnimatedAddition';\nimport AnimatedDiffClamp from '../../Animated/nodes/AnimatedDiffClamp';\nimport AnimatedNode from '../../Animated/nodes/AnimatedNode';\n\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport View from '../View/View';\nimport Platform from '../../Utilities/Platform';\n\nimport type {LayoutEvent} from '../../Types/CoreEventTypes';\n\nconst AnimatedView = AnimatedImplementation.createAnimatedComponent(View);\n\nexport type Props = $ReadOnly<{\n  children?: React.Element<any>,\n  nextHeaderLayoutY: ?number,\n  onLayout: (event: LayoutEvent) => void,\n  scrollAnimatedValue: AnimatedImplementation.Value,\n  // Will cause sticky headers to stick at the bottom of the ScrollView instead\n  // of the top.\n  inverted: ?boolean,\n  // The height of the parent ScrollView. Currently only set when inverted.\n  scrollViewHeight: ?number,\n  nativeID?: ?string,\n  hiddenOnScroll?: ?boolean,\n}>;\n\ntype State = {\n  measured: boolean,\n  layoutY: number,\n  layoutHeight: number,\n  nextHeaderLayoutY: ?number,\n  translateY: ?number,\n  ...\n};\n\nclass ScrollViewStickyHeader extends React.Component<Props, State> {\n  state: State = {\n    measured: false,\n    layoutY: 0,\n    layoutHeight: 0,\n    nextHeaderLayoutY: this.props.nextHeaderLayoutY,\n    translateY: null,\n  };\n\n  _translateY: ?AnimatedNode = null;\n  _shouldRecreateTranslateY: boolean = true;\n  _haveReceivedInitialZeroTranslateY: boolean = true;\n  _ref: any; // TODO T53738161: flow type this, and the whole file\n\n  // Fabric-only:\n  _timer: ?TimeoutID;\n  _animatedValueListenerId: string;\n  _animatedValueListener: (valueObject: $ReadOnly<{|value: number|}>) => void;\n  _debounceTimeout: number = Platform.OS === 'android' ? 15 : 64;\n\n  setNextHeaderY: (y: number) => void = (y: number): void => {\n    this._shouldRecreateTranslateY = true;\n    this.setState({nextHeaderLayoutY: y});\n  };\n\n  componentWillUnmount() {\n    if (this._translateY != null && this._animatedValueListenerId != null) {\n      this._translateY.removeListener(this._animatedValueListenerId);\n    }\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.scrollViewHeight !== this.props.scrollViewHeight ||\n      nextProps.scrollAnimatedValue !== this.props.scrollAnimatedValue ||\n      nextProps.inverted !== this.props.inverted\n    ) {\n      this._shouldRecreateTranslateY = true;\n    }\n  }\n\n  updateTranslateListener(\n    translateY: AnimatedImplementation.Interpolation,\n    isFabric: boolean,\n    offset: AnimatedDiffClamp | null,\n  ) {\n    if (this._translateY != null && this._animatedValueListenerId != null) {\n      this._translateY.removeListener(this._animatedValueListenerId);\n    }\n    offset\n      ? (this._translateY = new AnimatedAddition(translateY, offset))\n      : (this._translateY = translateY);\n\n    this._shouldRecreateTranslateY = false;\n\n    if (!isFabric) {\n      return;\n    }\n\n    if (!this._animatedValueListener) {\n      // This is called whenever the (Interpolated) Animated Value\n      // updates, which is several times per frame during scrolling.\n      // To ensure that the Fabric ShadowTree has the most recent\n      // translate style of this node, we debounce the value and then\n      // pass it through to the underlying node during render.\n      // This is:\n      // 1. Only an issue in Fabric.\n      // 2. Worse in Android than iOS. In Android, but not iOS, you\n      //    can touch and move your finger slightly and still trigger\n      //    a \"tap\" event. In iOS, moving will cancel the tap in\n      //    both Fabric and non-Fabric. On Android when you move\n      //    your finger, the hit-detection moves from the Android\n      //    platform to JS, so we need the ShadowTree to have knowledge\n      //    of the current position.\n      this._animatedValueListener = ({value}) => {\n        // When the AnimatedInterpolation is recreated, it always initializes\n        // to a value of zero and emits a value change of 0 to its listeners.\n        if (value === 0 && !this._haveReceivedInitialZeroTranslateY) {\n          this._haveReceivedInitialZeroTranslateY = true;\n          return;\n        }\n        if (this._timer) {\n          clearTimeout(this._timer);\n        }\n        this._timer = setTimeout(() => {\n          if (value !== this.state.translateY) {\n            this.setState({\n              translateY: value,\n            });\n          }\n        }, this._debounceTimeout);\n      };\n    }\n    if (this.state.translateY !== 0 && this.state.translateY != null) {\n      this._haveReceivedInitialZeroTranslateY = false;\n    }\n    this._animatedValueListenerId = translateY.addListener(\n      this._animatedValueListener,\n    );\n  }\n\n  _onLayout = (event: any) => {\n    const layoutY = event.nativeEvent.layout.y;\n    const layoutHeight = event.nativeEvent.layout.height;\n    const measured = true;\n\n    if (\n      layoutY !== this.state.layoutY ||\n      layoutHeight !== this.state.layoutHeight ||\n      measured !== this.state.measured\n    ) {\n      this._shouldRecreateTranslateY = true;\n    }\n\n    this.setState({\n      measured,\n      layoutY,\n      layoutHeight,\n    });\n\n    this.props.onLayout(event);\n    const child = React.Children.only(this.props.children);\n    if (child.props.onCellLayout) {\n      child.props.onCellLayout(event, child.props.cellKey, child.props.index);\n    } else if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n\n  _setComponentRef = ref => {\n    this._ref = ref;\n  };\n\n  render(): React.Node {\n    // Fabric Detection\n    const isFabric = !!(\n      // An internal transform mangles variables with leading \"_\" as private.\n      // eslint-disable-next-line dot-notation\n      (this._ref && this._ref['_internalInstanceHandle']?.stateNode?.canonical)\n    );\n    // Initially and in the case of updated props or layout, we\n    // recreate this interpolated value. Otherwise, we do not recreate\n    // when there are state changes.\n    if (this._shouldRecreateTranslateY) {\n      const {inverted, scrollViewHeight} = this.props;\n      const {measured, layoutHeight, layoutY, nextHeaderLayoutY} = this.state;\n      const inputRange: Array<number> = [-1, 0];\n      const outputRange: Array<number> = [0, 0];\n\n      if (measured) {\n        if (inverted) {\n          // The interpolation looks like:\n          // - Negative scroll: no translation\n          // - `stickStartPoint` is the point at which the header will start sticking.\n          //   It is calculated using the ScrollView viewport height so it is a the bottom.\n          // - Headers that are in the initial viewport will never stick, `stickStartPoint`\n          //   will be negative.\n          // - From 0 to `stickStartPoint` no translation. This will cause the header\n          //   to scroll normally until it reaches the top of the scroll view.\n          // - From `stickStartPoint` to when the next header y hits the bottom edge of the header: translate\n          //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n          // - Past the collision with the next header y: no more translation. This will cause the\n          //   header to continue scrolling up and make room for the next sticky header.\n          //   In the case that there is no next header just translate equally to\n          //   scroll indefinitely.\n          if (scrollViewHeight != null) {\n            const stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n            if (stickStartPoint > 0) {\n              inputRange.push(stickStartPoint);\n              outputRange.push(0);\n              inputRange.push(stickStartPoint + 1);\n              outputRange.push(1);\n              // If the next sticky header has not loaded yet (probably windowing) or is the last\n              // we can just keep it sticked forever.\n              const collisionPoint =\n                (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n              if (collisionPoint > stickStartPoint) {\n                inputRange.push(collisionPoint, collisionPoint + 1);\n                outputRange.push(\n                  collisionPoint - stickStartPoint,\n                  collisionPoint - stickStartPoint,\n                );\n              }\n            }\n          }\n        } else {\n          // The interpolation looks like:\n          // - Negative scroll: no translation\n          // - From 0 to the y of the header: no translation. This will cause the header\n          //   to scroll normally until it reaches the top of the scroll view.\n          // - From header y to when the next header y hits the bottom edge of the header: translate\n          //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n          // - Past the collision with the next header y: no more translation. This will cause the\n          //   header to continue scrolling up and make room for the next sticky header.\n          //   In the case that there is no next header just translate equally to\n          //   scroll indefinitely.\n          inputRange.push(layoutY);\n          outputRange.push(0);\n          // If the next sticky header has not loaded yet (probably windowing) or is the last\n          // we can just keep it sticked forever.\n          const collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n          if (collisionPoint >= layoutY) {\n            inputRange.push(collisionPoint, collisionPoint + 1);\n            outputRange.push(\n              collisionPoint - layoutY,\n              collisionPoint - layoutY,\n            );\n          } else {\n            inputRange.push(layoutY + 1);\n            outputRange.push(1);\n          }\n        }\n      }\n\n      this.updateTranslateListener(\n        this.props.scrollAnimatedValue.interpolate({\n          inputRange,\n          outputRange,\n        }),\n        isFabric,\n        this.props.hiddenOnScroll\n          ? new AnimatedDiffClamp(\n              this.props.scrollAnimatedValue\n                .interpolate({\n                  extrapolateLeft: 'clamp',\n                  inputRange: [layoutY, layoutY + 1],\n                  outputRange: ([0, 1]: Array<number>),\n                })\n                .interpolate({\n                  inputRange: [0, 1],\n                  outputRange: ([0, -1]: Array<number>),\n                }),\n              -this.state.layoutHeight,\n              0,\n            )\n          : null,\n      );\n    }\n\n    const child = React.Children.only(this.props.children);\n\n    // TODO T68319535: remove this if NativeAnimated is rewritten for Fabric\n    const passthroughAnimatedPropExplicitValues =\n      isFabric && this.state.translateY != null\n        ? {\n            style: {transform: [{translateY: this.state.translateY}]},\n          }\n        : null;\n\n    return (\n      <AnimatedView\n        collapsable={false}\n        nativeID={this.props.nativeID}\n        onLayout={this._onLayout}\n        ref={this._setComponentRef}\n        style={[\n          child.props.style,\n          styles.header,\n          {transform: [{translateY: this._translateY}]},\n        ]}\n        passthroughAnimatedPropExplicitValues={\n          passthroughAnimatedPropExplicitValues\n        }>\n        {React.cloneElement(child, {\n          style: styles.fill, // We transfer the child style to the wrapper.\n          onLayout: undefined, // we call this manually through our this._onLayout\n        })}\n      </AnimatedView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n    position: 'relative',\n  },\n  fill: {\n    flex: 1,\n  },\n});\n\nmodule.exports = ScrollViewStickyHeader;\n"],"mappings":"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"}