c5ae04228c42c86e7792825424f048ac
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactNative2 = require("@testing-library/react-native");

var _native = require("@react-navigation/native");

var _navigation = require("../src/navigators/navigation");

describe('Home', function () {
  var component = _react.default.createElement(_native.NavigationContainer, null, _react.default.createElement(_navigation.TopNavigator, null));

  it('navigates to Home when Home is tapped while on Home', (0, _asyncToGenerator2.default)(function* () {
    (0, _reactNative2.render)(component);

    var homeTabButton = _reactNative2.screen.getByLabelText('Home, tab, 1 of 2');

    (0, _reactNative2.fireEvent)(homeTabButton, 'press');
    var homeScreen = yield _reactNative2.screen.findByText('Welcome to the Home Screen');
    expect(homeScreen).toBeTruthy();
  }));
  it('navigates to Checklist when Checklist is tapped while on Home Screen', (0, _asyncToGenerator2.default)(function* () {
    (0, _reactNative2.render)(component);

    var checklistTabButton = _reactNative2.screen.getByLabelText('Checklists, tab, 2 of 2');

    (0, _reactNative2.fireEvent)(checklistTabButton, 'press');
    var checklistScreen = yield _reactNative2.screen.findByText('Welcome to the Checklists Screen');
    expect(checklistScreen).toBeTruthy();
  }));
  it('navigates to Home when Home is tapped on Checklist Screen', (0, _asyncToGenerator2.default)(function* () {
    (0, _reactNative2.render)(component);

    var checklistTabButton = _reactNative2.screen.getByLabelText('Checklists, tab, 2 of 2');

    (0, _reactNative2.fireEvent)(checklistTabButton, 'press');
    yield _reactNative2.screen.findByText('Welcome to the Checklists Screen');

    var homeTabButton = _reactNative2.screen.getByLabelText('Home, tab, 1 of 2');

    (0, _reactNative2.fireEvent)(homeTabButton, 'press');

    var homeScreen = _reactNative2.screen.queryByText('Welcome to the Home Screen');

    expect(homeScreen).toBeTruthy();
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImNvbXBvbmVudCIsIml0IiwicmVuZGVyIiwiaG9tZVRhYkJ1dHRvbiIsInNjcmVlbiIsImdldEJ5TGFiZWxUZXh0IiwiZmlyZUV2ZW50IiwiaG9tZVNjcmVlbiIsImZpbmRCeVRleHQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiY2hlY2tsaXN0VGFiQnV0dG9uIiwiY2hlY2tsaXN0U2NyZWVuIiwicXVlcnlCeVRleHQiXSwic291cmNlcyI6WyJOYXZpZ2F0aW9uLXRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3NldHVwU2VydmVyfSBmcm9tICdtc3cvbm9kZSc7XG5pbXBvcnQge3Jlc3R9IGZyb20gJ21zdyc7XG5pbXBvcnQgQXBwIGZyb20gJ0FwcCc7XG5pbXBvcnQge0hvbWVMaXN0fSBmcm9tICdjb21wb25lbnRzL0hvbWVMaXN0L0hvbWVMaXN0JztcbmltcG9ydCBkYXRhIGZyb20gJy4uL2RhdGEuanNvbic7XG4vLyBOb3RlOiB0ZXN0IHJlbmRlcmVyIG11c3QgYmUgcmVxdWlyZWQgYWZ0ZXIgcmVhY3QtbmF0aXZlLlxuaW1wb3J0IHJlbmRlcmVyLCB7UmVhY3RUZXN0SW5zdGFuY2V9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHtcbiAgcmVuZGVyLFxuICBzY3JlZW4sXG4gIHdhaXRGb3IsXG4gIGZpcmVFdmVudCxcbn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHtOYXZpZ2F0aW9uQ29udGFpbmVyfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnO1xuaW1wb3J0IHtUb3BOYXZpZ2F0b3J9IGZyb20gJ25hdmlnYXRvcnMvbmF2aWdhdGlvbic7XG5cbmRlc2NyaWJlKCdIb21lJywgKCkgPT4ge1xuICBjb25zdCBjb21wb25lbnQgPSAoXG4gICAgPE5hdmlnYXRpb25Db250YWluZXI+XG4gICAgICA8VG9wTmF2aWdhdG9yIC8+XG4gICAgPC9OYXZpZ2F0aW9uQ29udGFpbmVyPlxuICApO1xuICBpdCgnbmF2aWdhdGVzIHRvIEhvbWUgd2hlbiBIb21lIGlzIHRhcHBlZCB3aGlsZSBvbiBIb21lJywgYXN5bmMgKCkgPT4ge1xuICAgIHJlbmRlcihjb21wb25lbnQpO1xuICAgIGNvbnN0IGhvbWVUYWJCdXR0b246IFJlYWN0VGVzdEluc3RhbmNlID1cbiAgICAgIHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnSG9tZSwgdGFiLCAxIG9mIDInKTtcblxuICAgIGZpcmVFdmVudChob21lVGFiQnV0dG9uLCAncHJlc3MnKTtcblxuICAgIGNvbnN0IGhvbWVTY3JlZW4gPSBhd2FpdCBzY3JlZW4uZmluZEJ5VGV4dCgnV2VsY29tZSB0byB0aGUgSG9tZSBTY3JlZW4nKTtcblxuICAgIGV4cGVjdChob21lU2NyZWVuKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuICBpdCgnbmF2aWdhdGVzIHRvIENoZWNrbGlzdCB3aGVuIENoZWNrbGlzdCBpcyB0YXBwZWQgd2hpbGUgb24gSG9tZSBTY3JlZW4nLCBhc3luYyAoKSA9PiB7XG4gICAgcmVuZGVyKGNvbXBvbmVudCk7XG5cbiAgICBjb25zdCBjaGVja2xpc3RUYWJCdXR0b246IFJlYWN0VGVzdEluc3RhbmNlID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KFxuICAgICAgJ0NoZWNrbGlzdHMsIHRhYiwgMiBvZiAyJyxcbiAgICApO1xuXG4gICAgZmlyZUV2ZW50KGNoZWNrbGlzdFRhYkJ1dHRvbiwgJ3ByZXNzJyk7XG5cbiAgICBjb25zdCBjaGVja2xpc3RTY3JlZW4gPSBhd2FpdCBzY3JlZW4uZmluZEJ5VGV4dChcbiAgICAgICdXZWxjb21lIHRvIHRoZSBDaGVja2xpc3RzIFNjcmVlbicsXG4gICAgKTtcblxuICAgIGV4cGVjdChjaGVja2xpc3RTY3JlZW4pLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG4gIGl0KCduYXZpZ2F0ZXMgdG8gSG9tZSB3aGVuIEhvbWUgaXMgdGFwcGVkIG9uIENoZWNrbGlzdCBTY3JlZW4nLCBhc3luYyAoKSA9PiB7XG4gICAgcmVuZGVyKGNvbXBvbmVudCk7XG4gICAgY29uc3QgY2hlY2tsaXN0VGFiQnV0dG9uOiBSZWFjdFRlc3RJbnN0YW5jZSA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dChcbiAgICAgICdDaGVja2xpc3RzLCB0YWIsIDIgb2YgMicsXG4gICAgKTtcblxuICAgIGZpcmVFdmVudChjaGVja2xpc3RUYWJCdXR0b24sICdwcmVzcycpO1xuXG4gICAgYXdhaXQgc2NyZWVuLmZpbmRCeVRleHQoJ1dlbGNvbWUgdG8gdGhlIENoZWNrbGlzdHMgU2NyZWVuJyk7XG5cbiAgICBjb25zdCBob21lVGFiQnV0dG9uOiBSZWFjdFRlc3RJbnN0YW5jZSA9XG4gICAgICBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoJ0hvbWUsIHRhYiwgMSBvZiAyJyk7XG5cbiAgICBmaXJlRXZlbnQoaG9tZVRhYkJ1dHRvbiwgJ3ByZXNzJyk7XG5cbiAgICBjb25zdCBob21lU2NyZWVuID0gc2NyZWVuLnF1ZXJ5QnlUZXh0KCdXZWxjb21lIHRvIHRoZSBIb21lIFNjcmVlbicpO1xuXG4gICAgZXhwZWN0KGhvbWVTY3JlZW4pLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQVFBOztBQU1BOztBQUNBOztBQUVBQSxRQUFRLENBQUMsTUFBRCxFQUFTLFlBQU07RUFDckIsSUFBTUMsU0FBUyxHQUNiLDZCQUFDLDJCQUFELFFBQ0UsNkJBQUMsd0JBQUQsT0FERixDQURGOztFQUtBQyxFQUFFLENBQUMscURBQUQsa0NBQXdELGFBQVk7SUFDcEUsSUFBQUMsb0JBQUEsRUFBT0YsU0FBUDs7SUFDQSxJQUFNRyxhQUFnQyxHQUNwQ0Msb0JBQUEsQ0FBT0MsY0FBUCxDQUFzQixtQkFBdEIsQ0FERjs7SUFHQSxJQUFBQyx1QkFBQSxFQUFVSCxhQUFWLEVBQXlCLE9BQXpCO0lBRUEsSUFBTUksVUFBVSxTQUFTSCxvQkFBQSxDQUFPSSxVQUFQLENBQWtCLDRCQUFsQixDQUF6QjtJQUVBQyxNQUFNLENBQUNGLFVBQUQsQ0FBTixDQUFtQkcsVUFBbkI7RUFDRCxDQVZDLEVBQUY7RUFXQVQsRUFBRSxDQUFDLHNFQUFELGtDQUF5RSxhQUFZO0lBQ3JGLElBQUFDLG9CQUFBLEVBQU9GLFNBQVA7O0lBRUEsSUFBTVcsa0JBQXFDLEdBQUdQLG9CQUFBLENBQU9DLGNBQVAsQ0FDNUMseUJBRDRDLENBQTlDOztJQUlBLElBQUFDLHVCQUFBLEVBQVVLLGtCQUFWLEVBQThCLE9BQTlCO0lBRUEsSUFBTUMsZUFBZSxTQUFTUixvQkFBQSxDQUFPSSxVQUFQLENBQzVCLGtDQUQ0QixDQUE5QjtJQUlBQyxNQUFNLENBQUNHLGVBQUQsQ0FBTixDQUF3QkYsVUFBeEI7RUFDRCxDQWRDLEVBQUY7RUFlQVQsRUFBRSxDQUFDLDJEQUFELGtDQUE4RCxhQUFZO0lBQzFFLElBQUFDLG9CQUFBLEVBQU9GLFNBQVA7O0lBQ0EsSUFBTVcsa0JBQXFDLEdBQUdQLG9CQUFBLENBQU9DLGNBQVAsQ0FDNUMseUJBRDRDLENBQTlDOztJQUlBLElBQUFDLHVCQUFBLEVBQVVLLGtCQUFWLEVBQThCLE9BQTlCO0lBRUEsTUFBTVAsb0JBQUEsQ0FBT0ksVUFBUCxDQUFrQixrQ0FBbEIsQ0FBTjs7SUFFQSxJQUFNTCxhQUFnQyxHQUNwQ0Msb0JBQUEsQ0FBT0MsY0FBUCxDQUFzQixtQkFBdEIsQ0FERjs7SUFHQSxJQUFBQyx1QkFBQSxFQUFVSCxhQUFWLEVBQXlCLE9BQXpCOztJQUVBLElBQU1JLFVBQVUsR0FBR0gsb0JBQUEsQ0FBT1MsV0FBUCxDQUFtQiw0QkFBbkIsQ0FBbkI7O0lBRUFKLE1BQU0sQ0FBQ0YsVUFBRCxDQUFOLENBQW1CRyxVQUFuQjtFQUNELENBbEJDLEVBQUY7QUFtQkQsQ0FuRE8sQ0FBUiJ9