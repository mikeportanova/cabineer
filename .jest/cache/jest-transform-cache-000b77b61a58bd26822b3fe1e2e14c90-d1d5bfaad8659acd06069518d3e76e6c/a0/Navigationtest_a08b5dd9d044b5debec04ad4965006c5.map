{"version":3,"names":["describe","component","it","render","homeTabButton","screen","getByLabelText","fireEvent","homeScreen","findByText","expect","toBeTruthy","checklistTabButton","checklistScreen","queryByText"],"sources":["Navigation-test.tsx"],"sourcesContent":["import 'react-native';\nimport React from 'react';\nimport {setupServer} from 'msw/node';\nimport {rest} from 'msw';\nimport App from 'App';\nimport {HomeList} from 'components/HomeList/HomeList';\nimport data from '../data.json';\n// Note: test renderer must be required after react-native.\nimport renderer, {ReactTestInstance} from 'react-test-renderer';\nimport {\n  render,\n  screen,\n  waitFor,\n  fireEvent,\n} from '@testing-library/react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {TopNavigator} from 'navigators/navigation';\n\ndescribe('Home', () => {\n  const component = (\n    <NavigationContainer>\n      <TopNavigator />\n    </NavigationContainer>\n  );\n  it('navigates to Home when Home is tapped while on Home', async () => {\n    render(component);\n    const homeTabButton: ReactTestInstance =\n      screen.getByLabelText('Home, tab, 1 of 2');\n\n    fireEvent(homeTabButton, 'press');\n\n    const homeScreen = await screen.findByText('Welcome to the Home Screen');\n\n    expect(homeScreen).toBeTruthy();\n  });\n  it('navigates to Checklist when Checklist is tapped while on Home Screen', async () => {\n    render(component);\n\n    const checklistTabButton: ReactTestInstance = screen.getByLabelText(\n      'Checklists, tab, 2 of 2',\n    );\n\n    fireEvent(checklistTabButton, 'press');\n\n    const checklistScreen = await screen.findByText(\n      'Welcome to the Checklists Screen',\n    );\n\n    expect(checklistScreen).toBeTruthy();\n  });\n  it('navigates to Home when Home is tapped on Checklist Screen', async () => {\n    render(component);\n    const checklistTabButton: ReactTestInstance = screen.getByLabelText(\n      'Checklists, tab, 2 of 2',\n    );\n\n    fireEvent(checklistTabButton, 'press');\n\n    await screen.findByText('Welcome to the Checklists Screen');\n\n    const homeTabButton: ReactTestInstance =\n      screen.getByLabelText('Home, tab, 1 of 2');\n\n    fireEvent(homeTabButton, 'press');\n\n    const homeScreen = screen.queryByText('Welcome to the Home Screen');\n\n    expect(homeScreen).toBeTruthy();\n  });\n});\n"],"mappings":";;;;AAAA;;AACA;;AAQA;;AAMA;;AACA;;AAEAA,QAAQ,CAAC,MAAD,EAAS,YAAM;EACrB,IAAMC,SAAS,GACb,6BAAC,2BAAD,QACE,6BAAC,wBAAD,OADF,CADF;;EAKAC,EAAE,CAAC,qDAAD,kCAAwD,aAAY;IACpE,IAAAC,oBAAA,EAAOF,SAAP;;IACA,IAAMG,aAAgC,GACpCC,oBAAA,CAAOC,cAAP,CAAsB,mBAAtB,CADF;;IAGA,IAAAC,uBAAA,EAAUH,aAAV,EAAyB,OAAzB;IAEA,IAAMI,UAAU,SAASH,oBAAA,CAAOI,UAAP,CAAkB,4BAAlB,CAAzB;IAEAC,MAAM,CAACF,UAAD,CAAN,CAAmBG,UAAnB;EACD,CAVC,EAAF;EAWAT,EAAE,CAAC,sEAAD,kCAAyE,aAAY;IACrF,IAAAC,oBAAA,EAAOF,SAAP;;IAEA,IAAMW,kBAAqC,GAAGP,oBAAA,CAAOC,cAAP,CAC5C,yBAD4C,CAA9C;;IAIA,IAAAC,uBAAA,EAAUK,kBAAV,EAA8B,OAA9B;IAEA,IAAMC,eAAe,SAASR,oBAAA,CAAOI,UAAP,CAC5B,kCAD4B,CAA9B;IAIAC,MAAM,CAACG,eAAD,CAAN,CAAwBF,UAAxB;EACD,CAdC,EAAF;EAeAT,EAAE,CAAC,2DAAD,kCAA8D,aAAY;IAC1E,IAAAC,oBAAA,EAAOF,SAAP;;IACA,IAAMW,kBAAqC,GAAGP,oBAAA,CAAOC,cAAP,CAC5C,yBAD4C,CAA9C;;IAIA,IAAAC,uBAAA,EAAUK,kBAAV,EAA8B,OAA9B;IAEA,MAAMP,oBAAA,CAAOI,UAAP,CAAkB,kCAAlB,CAAN;;IAEA,IAAML,aAAgC,GACpCC,oBAAA,CAAOC,cAAP,CAAsB,mBAAtB,CADF;;IAGA,IAAAC,uBAAA,EAAUH,aAAV,EAAyB,OAAzB;;IAEA,IAAMI,UAAU,GAAGH,oBAAA,CAAOS,WAAP,CAAmB,4BAAnB,CAAnB;;IAEAJ,MAAM,CAACF,UAAD,CAAN,CAAmBG,UAAnB;EACD,CAlBC,EAAF;AAmBD,CAnDO,CAAR"}