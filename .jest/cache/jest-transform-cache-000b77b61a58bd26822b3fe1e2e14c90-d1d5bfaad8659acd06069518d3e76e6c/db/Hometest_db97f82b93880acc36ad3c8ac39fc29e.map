{"version":3,"names":["describe","component","it","render","homeScreen","screen","findByText","expect","toBeDefined","checklistNavButton","getByText","fireEvent","checklistScreen","findByTestId","toBeTruthy","data","getAllByTestId","name","index","address","length","toBe"],"sources":["Home-test.tsx"],"sourcesContent":["/**\n * @format\n */\n\nimport 'react-native';\nimport React from 'react';\nimport {setupServer} from 'msw/node';\nimport {rest} from 'msw';\nimport App from 'App';\nimport {HomeList} from 'components/HomeList/HomeList';\nimport data from '../data.json';\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\nimport {\n  render,\n  screen,\n  waitFor,\n  fireEvent,\n} from '@testing-library/react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {TopNavigator} from 'navigators/navigation';\n\ndescribe('Home', () => {\n  const component = (\n    <NavigationContainer>\n      <TopNavigator />\n    </NavigationContainer>\n  );\n  it('renders the Home Screen on launch', async () => {\n    render(component, {});\n    const homeScreen = await screen.findByText('Welcome to the Home Screen');\n    expect(homeScreen).toBeDefined();\n  });\n\n  it('renders the Checklists screen when the Checklists button is tapped', async () => {\n    render(component, {});\n\n    const checklistNavButton = screen.getByText('Go To Checklists');\n\n    fireEvent(checklistNavButton, 'press');\n\n    const checklistScreen = await screen.findByTestId('checklist-screen');\n\n    expect(checklistScreen).toBeTruthy();\n  });\n\n  it('when given mock data of length 2, it displays two items in FlatList', () => {\n    const {getAllByTestId} = render(<HomeList data={data} />, {});\n    const name = getAllByTestId('item-name');\n    const index = getAllByTestId('item-index');\n    const address = getAllByTestId('item-address');\n    expect(name.length).toBe(2);\n    expect(index.length).toBe(2);\n    expect(address.length).toBe(2);\n  });\n});\n\n// it('renders the HomeList component correctly', () => {\n//   const {getByTestId, getByText, queryByTestId, toJSON} = render(<App />);\n//   const homeList = getByTestId('home-list');\n//   expect(homeList).toBeDefined();\n// });\n"],"mappings":";;;;AAIA;;AACA;;AAIA;;AACA;;AAGA;;AAMA;;AACA;;AAEAA,QAAQ,CAAC,MAAD,EAAS,YAAM;EACrB,IAAMC,SAAS,GACb,6BAAC,2BAAD,QACE,6BAAC,wBAAD,OADF,CADF;;EAKAC,EAAE,CAAC,mCAAD,kCAAsC,aAAY;IAClD,IAAAC,oBAAA,EAAOF,SAAP,EAAkB,EAAlB;IACA,IAAMG,UAAU,SAASC,oBAAA,CAAOC,UAAP,CAAkB,4BAAlB,CAAzB;IACAC,MAAM,CAACH,UAAD,CAAN,CAAmBI,WAAnB;EACD,CAJC,EAAF;EAMAN,EAAE,CAAC,oEAAD,kCAAuE,aAAY;IACnF,IAAAC,oBAAA,EAAOF,SAAP,EAAkB,EAAlB;;IAEA,IAAMQ,kBAAkB,GAAGJ,oBAAA,CAAOK,SAAP,CAAiB,kBAAjB,CAA3B;;IAEA,IAAAC,uBAAA,EAAUF,kBAAV,EAA8B,OAA9B;IAEA,IAAMG,eAAe,SAASP,oBAAA,CAAOQ,YAAP,CAAoB,kBAApB,CAA9B;IAEAN,MAAM,CAACK,eAAD,CAAN,CAAwBE,UAAxB;EACD,CAVC,EAAF;EAYAZ,EAAE,CAAC,qEAAD,EAAwE,YAAM;IAC9E,cAAyB,IAAAC,oBAAA,EAAO,6BAAC,kBAAD;MAAU,IAAI,EAAEY;IAAhB,EAAP,EAAiC,EAAjC,CAAzB;IAAA,IAAOC,cAAP,WAAOA,cAAP;;IACA,IAAMC,IAAI,GAAGD,cAAc,CAAC,WAAD,CAA3B;IACA,IAAME,KAAK,GAAGF,cAAc,CAAC,YAAD,CAA5B;IACA,IAAMG,OAAO,GAAGH,cAAc,CAAC,cAAD,CAA9B;IACAT,MAAM,CAACU,IAAI,CAACG,MAAN,CAAN,CAAoBC,IAApB,CAAyB,CAAzB;IACAd,MAAM,CAACW,KAAK,CAACE,MAAP,CAAN,CAAqBC,IAArB,CAA0B,CAA1B;IACAd,MAAM,CAACY,OAAO,CAACC,MAAT,CAAN,CAAuBC,IAAvB,CAA4B,CAA5B;EACD,CARC,CAAF;AASD,CAjCO,CAAR"}